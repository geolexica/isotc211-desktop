@import "~@blueprintjs/core/lib/scss/variables";


:local .entryForm {
  $padding: $pt-grid-size + $pt-border-radius;

  display: flex;
  flex-flow: column nowrap;
  padding: $padding;

  .designation {
    box-shadow: $pt-elevation-shadow-1;
    margin-top: -$pt-grid-size / 2;

    :global .bp3-input {
      font-weight: bold;
    }
  }

  .designationProps {
    z-index: 2;
    position: relative;
    padding: 0 $pt-grid-size;
    margin-top: -$pt-border-radius / 2;

    .usageArea {
      width: 6em;
    }
  }

  .usageInfo {
    display: flex;
    flex-flow: row nowrap;

    > :first-child {
      margin-right: $pt-grid-size;
    }

    > * {
      flex: 1;
    }
  }

  :global .bp3-form-group {
    .bp3-label {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .bp3-form-content {
      margin-left: -$padding;
      margin-right: -$padding;

      > .bp3-input, > .bp3-input-group .bp3-input {
        border-radius: 0;
        box-shadow: none;
        padding-left: $padding;
      }

      .bp3-form-helper-text {
        margin-left: $padding;
        margin-right: $padding;
      }
    }
  }
}


:local .conceptEntryForm {
  flex: 1;

  display: flex;
  flex-flow: column nowrap;
  overflow-y: hidden;

  .entryForm {
    flex: 1;
    overflow-y: auto;
  }
}


:local .label {
  opacity: .5;
  padding: .25rem;
  border: 1px dashed silver;
  margin: .5rem -.25rem;
  text-align: left;
  border-radius: .25em;
  text-shadow: rgba(0, 0, 0, 0.2) .1em .1em .2em;
}


:local .entryDetails {
  padding: 2rem;
  padding-top: 3rem;
  background: white;
  position: relative;

  .designation {
    font-weight: normal;
    font-family: Georgia, serif;
    margin-bottom: 1rem;

    > * {
      display: inline;
    }

    &.normativeStatus-deprecated {
      color: $pt-text-color-disabled;
    }
  }
  .legacyDomain {
    display: inherit;
    white-space: nowrap;
    position: absolute;
    top: 1.75rem;

    font-weight: normal;
    font-family: sans-serif;
    font-size: $pt-font-size-large;

    > :not(:last-child) {
      &::after {
        content: ", ";
      }
    }
  }
  .usageInfo {
    color: $pt-text-color-muted;
    margin-right: 1em;
  }
  .primaryDesignation {
    .designationMarkers {
      > * {
        margin-left: .5rem;
        margin-right: .5rem;
      }
    }
  }
  .synonyms {
    &:not(:empty) {
      margin-bottom: 1rem;
    }

    &:not(:empty)::before {
      content: "Syn.";
      font-style: italic;
    }

    > * {
      font-size: $pt-font-size-large;
      margin-left: .75em;
      &:not(:last-child)::after {
        content: ";";
        font-style: italic;
      }
    }
  }
  .designationMarkers {
    font-family: sans-serif;
    font-size: $pt-font-size;

    .grammar, .usage {
      color: $pt-text-color-muted;
    }

    .normativeStatus {
      color: $pt-text-color-muted;
    }

    .usage {
      text-transform: uppercase;
    }

    > * {
      margin-left: .5em;
      &:not(:last-child)::after {
        content: ",";
      }
    }
  }
  .example, .note {
    margin-bottom: 1rem;
  }
  .example {
    font-style: italic;
  }
  .definition {
    font-size: 120%;
    margin-left: 1em;
    margin-bottom: 2rem;
  }
}


:local .lazyConceptList {
  //.conceptID {
  //  margin-right: .5em;
  //}

  .lazyConceptListItem {
    border-radius: 0 !important;
    overflow: hidden;

    :global .bp3-button-text {
      display: flex;
      flex-flow: row nowrap;

      overflow: hidden;
      align-items: center;
      white-space: nowrap;
    }

    :global .bp3-icon {
      margin: 0 $pt-grid-size !important;
      color: unset;
    }

    .conceptItem {
      text-overflow: ellipsis;
      overflow: hidden;
    }

    .itemMarker {
      flex-shrink: 0;
      width: 4rem;
      margin-left: .5rem;
      margin-right: .5rem;
      display: flex;
      flex-flow: row nowrap;
      overflow: hidden;
    }

    .itemMarkerRight {
      flex: 1;
      width: 14em;
      margin-left: 1rem;
      margin-right: 1rem;
      display: flex;
      flex-flow: row nowrap;
      justify-content: flex-end;
    }

    &.lazyConceptListItemSelected {
      background: $pt-text-selection-color;
    }
  }
}
