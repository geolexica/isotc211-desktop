name: Build/release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Prepare for app notarization (macOS)
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        # Only install Snapcraft on Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        with:
          # Log in to Snap Store
          snapcraft_token: ${{ secrets.SNAPCRAFT_RELEASE_LOGIN }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # Run `yarn compile` before `yarn electron-builder --mac`
          build_script_name: "compile"

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # macOS code signing certificate
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          # Windows code signing certificate
          windows_certs: ${{ secrets.windows_certs }}
          windows_certs_password: ${{ secrets.windows_certs_password }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}

  update-site:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Build event type
        id: event_type
        run: |
          echo "##[set-output name=value;]deploy_${GITHUB_REF##*/}"
      - name: Trigger glossarist.org
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_GLOSSARIST_CI_TOKEN }}
          repository: glossarist/glossarist.org
          event-type: ${{ steps.event_type.outputs.value }}
